name: Glimpse

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:

  build:

    runs-on: ubuntu-22.04

    env:
      Solution_Name: Glimpse.sln
      OutputFileExtension: .zip
      Runtime: linux-x64
      ApplicationName: glimpse

    steps:
    - name: Find number of runs today
      id: num_runs_today
      run: |
        NUM_RUNS = curl -s -H "Authorization: token ${{ github.token }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs?created=$(date +%Y-%m-%d)" | jq '[.workflow_runs[] | select(.name == "${{ github.workflow }}")] | length')
        echo "num_run_today=$NUM_RUNS" >> $GITHUB_OUTPUT

    - name: Generate version number
      id: version
      run: |
        DATE=$(date +%Y.%m.%d)
        BUILD_NUMBER=${{ steps.num_runs_today.outputs.num_runs_today }}
        VERSION="${DATE}.${BUILD_NUMBER}"
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Generate asset file name
      id: asset_name
      run: |
        NAME=${{ env.ApplicationName }}_${{ env.Runtime }}_${{ steps.version.outputs.version }}${{ env.OutputFileExtension }}
        echo "asset_name=$NAME" >> $GITHUB_OUTPUT

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Execute unit tests
      run: dotnet test

    - name: Publish
      run: dotnet publish -r ${{ env.Runtime }} -c Release /p:Version=${{ steps.version.outputs.version }}

    - name: Zip release
      run: |
        zip --junk-paths ${{ steps.asset_name.outputs.asset_name }} src/Glimpse/bin/Release/net8.0/${{ env.Runtime }}/publish/glimpse

    - name: Create release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: Release $Version
        tag_name: ${{ steps.version.outputs.version }}
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.asset_name.outputs.asset_name }}
        asset_name: ${{ steps.asset_name.outputs.asset_name }}
        asset_content_type: application/gzip
